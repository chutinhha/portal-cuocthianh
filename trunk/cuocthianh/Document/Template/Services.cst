<%-- 
Name: Generator Service
Author: Pham duy linh
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" CompilerVersion="v3.5" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on." %>
<%@ Property Name="NameSpace" Type="String" Category="Context" Description="Current namespace of the application" %>
<%@ Assembly Name ="SchemaExplorer" %>
<%@ Import NameSpace="SchemaExplorer" %>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using CoreData;
using EntityData;
using Helper;
namespace Services
{

    public partial class <%=SourceTable.Name%>Service
    {
       readonly I<%=SourceTable.Name%>Entity entity;

       public <%=SourceTable.Name%>Service(I<%=SourceTable.Name%>Entity entity)
       {
           this.entity = entity;

       }

       #region Main Method

       /// <summary>
       /// Save 
       /// </summary>
       /// <param name="_model"></param>
       /// <returns></returns>
       public long Save(object _model)
       {
           try
           {
               var id = long.Parse(_model.GetType().GetProperty("ID").GetValue(_model, null).ToString());
               if (id == 0)
               {
                   return entity.Save((CoreData.<%=SourceTable.Name%>)_model, Table.<%=SourceTable.Name%>.ToString());
               }
               else
               {
                   return entity.Update((CoreData.<%=SourceTable.Name%>)_model, Table.<%=SourceTable.Name%>.ToString());
               }
           }
           catch { return -1; }
       }

       /// <summary>
       /// Get by ID
       /// </summary>
       /// <param name="_id"></param>
       /// <returns></returns>
       public CoreData.<%=SourceTable.Name%> GetByID(long _id)
       {
           try
           {
               return entity.GetById(_id, Table.<%=SourceTable.Name%>.ToString());
           }
           catch { return null; }
       }

       /// <summary>
       /// Get List
       /// </summary>
       /// <returns></returns>
       public IList<CoreData.<%=SourceTable.Name%>> GetList()
       {
           try
           {
               return entity.GetAll(Table.<%=SourceTable.Name%>.ToString()).ToList();
           }
           catch { return null; }

       }

       /// <summary>
       /// Get List with Linq
       /// </summary>
       /// <returns></returns>
       public IList<CoreData.<%=SourceTable.Name%>> GetListByLINQ(Func<CoreData.<%=SourceTable.Name%>, Boolean> _where)
       {
           try
           {
               return entity.GetMany(_where, Table.<%=SourceTable.Name%>.ToString()).ToList();
           }
           catch { return null; }
       }
       /// <summary>
       /// Get One with Linq
       /// </summary>
       /// <returns></returns>
       public CoreData.<%=SourceTable.Name%> GetOneByLINQ(Func<CoreData.<%=SourceTable.Name%>, Boolean> _where)
       {
           try
           {
               return entity.Get(_where, Table.<%=SourceTable.Name%>.ToString());
           }
           catch { return null; }
       }

       /// <summary>
       /// Get List with search string
       /// </summary>
       /// <returns></returns>
       public IList<CoreData.<%=SourceTable.Name%>> GetList(string _searchstring)
       {
           //search theo tieu chi nao do         
           try
           {
               return entity.GetBySearchString(_searchstring, Table.<%=SourceTable.Name%>.ToString()).ToList();
           }
           catch { return null; }
       }


       /// <summary>
       /// Delete
       /// </summary>
       /// <param name="_model"></param>
       /// <returns></returns>
       public bool Delete(object _model)
       {
           try
           {
               entity.Delete((CoreData.<%=SourceTable.Name%>)_model, Table.<%=SourceTable.Name%>.ToString());
               return true;
           }
           catch { return false; }
       }


       #endregion



        #region Other Method



        #endregion 
    
    }
         
}
